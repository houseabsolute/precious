Source: precious
Section: devel
Priority: optional
Maintainer: Jonas Smedegaard <dr@jones.dk>
Build-Depends:
 cmark-gfm <!nodoc>,
 debhelper-compat (= 13),
 dh-cargo,
 git <!nocheck>,
 help2man <!nodoc>,
 librust-anyhow-1+default-dev (>= 1.0.44),
 librust-clap-2+default-dev,
 librust-fern+colored-dev (<< 7),
 librust-fern+default-dev (<< 7),
 librust-globset-0.4+default-dev (>= 0.4.8),
 librust-ignore-0.4+default-dev (>= 0.4.18),
 librust-indexmap-1+default-dev (>= 1.7),
 librust-indexmap-1+serde-dev (>= 1.7),
 librust-itertools+default-dev (<< 0.11),
 librust-log-0.4+default-dev,
 librust-md5-dev (<< 8),
#path-clean = "~0.1"
 librust-pretty-assertions-1+default-dev (>= 1.1),
 librust-rayon-1+default-dev (>= 1.4.1),
 librust-serde-1+default-dev (>= 1.0.130),
 librust-serde-1+derive-dev (>= 1.0.130),
 librust-serial-test-0.5+default-dev <!nocheck>,
 librust-tempfile-3+default-dev <!nocheck>,
 librust-thiserror-1+default-dev (>= 1.0.30),
 librust-toml-dev (<< 6),
 librust-which+default-dev (<< 5),
Standards-Version: 4.6.0
Homepage: https://github.com/houseabsolute/precious
Vcs-Git: https://salsa.debian.org/debian/precious.git
Vcs-Browser: https://salsa.debian.org/debian/precious
Rules-Requires-Root: no

Package: precious
Architecture: any
Depends:
 ${misc:Depends},
 ${shlibs:Depends},
Suggests:
 git,
 golang-golang-x-tools,
 libperl-critic-perl,
 perl,
 perltidy,
 rust-clippy,
 rustfmt,
Built-Using: ${cargo:Built-Using}
XB-X-Cargo-Built-Using: ${cargo:X-Cargo-Built-Using}
Description: one code quality tool to rule them all
 Precious is a command-line tool to unify
 the execution of source code tidiers and validators.
 .
 With Precious you can configure
 all of your code quality tool rules in one place
 and easily run `precious` from your commit hooks and in CI.
 .
 Several tidier+validator unifiers/orchestraters exists,
 including perl-based TidyAll (the predecessor of Precious),
 Python-based pre-commit,
 Go-based lefthook,
 NodeJS-based husky and lint-staged,
 and Ruby-based overcommit.
 For comparison, Precious is Rust-based with these notable features:
  * handles directory-wide and project-wide tasks
    (unlike TidyAll)
  * stores task settings locally
    (unlike pre-commit)
  * cannot cache tasks
    (unlike TidyAll)
  * supports incremental linting
    (unlike lefthook, husky, lint-staged or overcommit)
 .
 For a more detailed comparison,
 see <https://blog.urth.org/2020/05/08/comparing-code-quality-meta-tools/>.
